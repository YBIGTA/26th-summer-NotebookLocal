/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var C=(o,t)=>{for(var e in t)r(o,e,{get:t[e],enumerable:!0})},f=(o,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of u(t))!g.call(o,s)&&s!==e&&r(o,s,{get:()=>t[s],enumerable:!(n=m(t,s))||n.enumerable});return o};var S=o=>f(r({},"__esModule",{value:!0}),o);var w={};C(w,{default:()=>l});module.exports=S(w);var i=require("obsidian");var a=class{constructor(t){this.baseUrl=t.serverUrl||"http://localhost:8000",this.timeout=t.timeout||3e4}updateSettings(t){this.baseUrl=t.serverUrl||"http://localhost:8000",this.timeout=t.timeout||3e4}async healthCheck(){let t=await fetch(`${this.baseUrl}/api/v1/health`,{method:"GET",signal:AbortSignal.timeout(this.timeout)});if(!t.ok)throw new Error(`Health check failed: ${t.status}`);return await t.json()}async uploadDocument(t){let e=new FormData;e.append("file",t);let n=await fetch(`${this.baseUrl}/api/v1/process`,{method:"POST",body:e,signal:AbortSignal.timeout(this.timeout)});if(!n.ok)throw new Error(`Upload failed: ${n.status}`);return await n.json()}async chat(t){let e=await fetch(`${this.baseUrl}/api/v1/obsidian/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t),signal:AbortSignal.timeout(this.timeout)});if(!e.ok)throw new Error(`Chat failed: ${e.status}`);return await e.json()}};var p={serverUrl:"http://localhost:8000",timeout:3e4,enableStreaming:!0,debug:!1};var c={...p};function h(){return{...c}}function d(o){c={...c,...o}}var l=class extends i.Plugin{async onload(){console.log("Loading Obsidian Copilot Plugin"),await this.loadSettings(),this.apiClient=new a(this.settings),this.addCommands(),this.addRibbonIcon("message-circle","Open Copilot Chat",()=>{this.openChatView()}),console.log("Copilot Plugin loaded successfully")}async onunload(){console.log("Unloading Copilot Plugin")}async loadSettings(){this.settings=Object.assign({},h(),await this.loadData())}async saveSettings(){await this.saveData(this.settings),d(this.settings),this.apiClient&&this.apiClient.updateSettings(this.settings)}addCommands(){this.addCommand({id:"open-chat",name:"Open Chat",callback:()=>this.openChatView()}),this.addCommand({id:"upload-document",name:"Upload Document",callback:()=>this.uploadDocument()}),this.addCommand({id:"test-connection",name:"Test Server Connection",callback:()=>this.testConnection()})}async openChatView(){new i.Notice("Chat view coming soon! Use commands for now.")}async uploadDocument(){let t=document.createElement("input");t.type="file",t.accept=".pdf",t.multiple=!1,t.onchange=async e=>{let n=e.target.files?.[0];if(n)try{new i.Notice("Uploading document...");let s=await this.apiClient.uploadDocument(n);new i.Notice(`Document uploaded successfully: ${s.filename}`)}catch(s){console.error("Upload failed:",s),new i.Notice(`Upload failed: ${s.message}`)}},t.click()}async testConnection(){try{new i.Notice("Testing server connection..."),(await this.apiClient.healthCheck()).status==="healthy"?new i.Notice("\u2705 Server connection successful!"):new i.Notice("\u26A0\uFE0F Server responded but may have issues")}catch(t){console.error("Connection test failed:",t),new i.Notice(`\u274C Connection failed: ${t.message}`)}}getApiClient(){return this.apiClient}};
